name: Tests
on: 
  push:
    branches: [ main ] # Workflow will be activated whenever there's a push on branch 'main'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'  # ✅ Explicit version matching local (v24.4.1)
      
      # Install Java + Allure
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17' # ✅ Correct Allure-compatible version
          distribution: 'temurin'

      # Install dependencies
      - name: Install dependencies
        run: npm ci # ✅ Clean install 

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps # ✅ Browser setup

      - name: Install Allure CLI globally 
        run: npm install -g allure-commandline --save-dev # ✅ Corrected official Java-based Allure CLI from Qameta. (do not use npx)

      # Run tests (root config handles projects) with masked secrets
      - name: Run Playwright tests
        env:
          FIRST_USERNAME: ${{ secrets.FIRST_USERNAME }} # ✅ Consistent with your config
          FIRST_PASSWORD: ${{ secrets.FIRST_PASSWORD }}
          FIRST_LOGIN_URL: ${{ secrets.FIRST_LOGIN_URL }}
        run: |
          echo "::add-mask::${{ secrets.FIRST_USERNAME }}" # ✅ Secret masking
          echo "::add-mask::${{ secrets.FIRST_PASSWORD }}"
          npx playwright test

      - name: Generate Allure report
        if: always() # ✅ Runs even if tests fail
        # run: |
        #   npx allure generate ./allure-results --clean
        #   mv allure-report allure-report-temp
        #   mv allure-report-temp ./allure-report
        run: |
          allure generate allure-results --clean -o allure-report


      # - name: Upload Allure report
      #   if: always()
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: allure-report
      #     path: ./allure-report/

      - name: Verify Allure results
        if: always() # ✅ Verifies if Allure results and reports were there
        run: |
          echo "Allure results files:"
          ls -la ./allure-results
          echo "Allure report:"
          ls -la ./allure-report

      - name: Deploy Allure Report to GitHub Pages
        if: always() # ✅ Critical for showing failed tests
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # ✅ Correct automatic token
          publish_dir: ./allure-report
          keep_files: true # ✅ Preserves history
          # force_orphan: true  # Force clean deployment for first time